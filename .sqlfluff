[sqlfluff]
dialect = bigquery
templater = dbt
max_line_length = 120
exclude_rules = L032

[sqlfluff:templater]
unwrap_wrapped_queries = True

[sqlfluff:indentation]
tab_space_size = 4
indented_joins = False
indented_ctes = False
indented_using_on = True
template_blocks_indent = True
indent_unit = space


[sqlfluff:templater:jinja]
apply_dbt_builtins = True

# Some rules can be configured directly from the config common to other rules
[sqlfluff:rules]

allow_scalar = True
single_table_references = consistent
unquoted_identifiers_policy = all

# Some rules have their own specific config
[sqlfluff:rules:layout.operators]
operator_new_lines = after

[sqlfluff:rules:capitalisation.keywords]
# Keywords
capitalisation_policy = upper
# Comma separated list of words to ignore for this rule
ignore_words = None

[sqlfluff:rules:aliasing.table]
# Aliasing preference for tables
aliasing = explicit

[sqlfluff:rules:aliasing.column]
# Aliasing preference for columns
aliasing = explicit

[sqlfluff:rules:capitalisation.identifiers]
# Unquoted identifiers
extended_capitalisation_policy = lower
# Comma separated list of words to ignore for this rule
ignore_words_regex = PRODUCT__[a-z]+|TRANSACTION__[a-z]+|ACCOUNTING__[a-z]+|PARTY__[a-z]+|CALENDAR__[a-z]+|WAREHOUSE__[a-z]+


[sqlfluff:rules:layout.spacing]
# Unless an indent or preceding a comment,
# whitespace should be a single space.
# There should also be no trailing whitespace at the ends of lines.
# There should be a space after USING so that it’s not confused for a function

[sqlfluff:rules:layout.long_lines]
# Line length
ignore_comment_lines = False
ignore_comment_clauses = False

[sqlfluff:rules:layout.functions]
# Remove the space between the function and the parenthesis.

[sqlfluff:rules:layout.cte_bracket]
# Move the closing bracket on a new line.

[sqlfluff:rules:layout.cte_newline]
#There is no blank line after the CTE closing bracket.
#In queries with many CTEs, this hinders readability.

[sqlfluff:rules:layout.select_targets]
# Multiple select targets each on their own line.

[sqlfluff:rules:layout.select_modifiers]
# SELECT modifiers (e.g. DISTINCT)
# must be on the same line as SELECT.
[sqlfluff:rules:layout.end_of_file]
# Files must end with a single trailing newline

[sqlfluff:rules:layout.start_of_file]
# Start file on either code or comment.

[sqlfluff:rules:layout.set_operators]
# Set operators should be surrounded by newlines.

[sqlfluff:rules:references.from]
# References must be in FROM clause
# Disabled for some dialects (e.g. bigquery)
force_enable = False

[sqlfluff:rules:references.consistent]
# References must be consistently used
# Disabled for some dialects (e.g. bigquery)
force_enable = True

[sqlfluff:rules:references.keywords]
# Keywords should not be used as identifiers.
unquoted_identifiers_policy = aliases
quoted_identifiers_policy = all
# Comma separated list of words to ignore for this rule
ignore_words = name


[sqlfluff:rules:capitalisation.functions]
# Function names
extended_capitalisation_policy = upper
# Comma separated list of words to ignore for this rule
ignore_words = None

[sqlfluff:rules:aliasing.forbid]
# Do not allow table aliases in from clauses and join conditions
force_enable = True

[sqlfluff:rules:capitalisation.literals]
# Null and Boolean Literals
capitalisation_policy = upper
# Comma separated list of words to ignore for this rule
ignore_words = None

[sqlfluff:rules:structure.subquery]
# Do not allow subqueries in from clauses or join clauses
forbid_subquery_in = both

[sqlfluff:rules:structure.unused_cte]
# Query defines a CTE (common-table expression) but does not use it.

[sqlfluff:rules:structure.nested_case]
# Nested CASE statement in ELSE clause could be flattened

[sqlfluff:rules:ambiguous.union]
# Specify DISTINCT or ALL after UNION
# (note that DISTINCT is the default behavior).

[sqlfluff:rules:ambiguous.set_columns]
# When writing set expressions,
# all queries must return the same number of columns.



[sqlfluff:rules:ambiguous.join]
# Fully qualify JOIN clause
fully_qualify_join_types = inner

[sqlfluff:rules:convention.count_rows]
# Consistent syntax to count all rows
prefer_count_1 = False
prefer_count_0 = False

[sqlfluff:rules:convention.select_trailing_comma]
# Trailing commas
select_clause_trailing_comma = forbid
[sqlfluff:rules:convention.statement_brackets]
# Don’t wrap top-level statements in brackets.

[sqlfluff:rules:convention.left_join]
# replace RIGHT JOIN with LEFT JOIN

[sqlfluff:rules:convention.is_null]
# Use IS or IS NOT to check for NULL values.

[sqlfluff:rules:convention.terminator]
# Semi-colon formatting approach
multiline_newline = False
require_final_semicolon = False

[sqlfluff:rules:convention.not_equal]
# Use != instead because its sounds more natural
# and is more common in other programming languages.

[sqlfluff:rules:convention.coalesce]
#Use COALESCE instead. COALESCE is universally supported, whereas
#Redshift doesn’t support IFNULL and BigQuery doesn’t support NVL.
#Additionally,COALESCE is more flexible and accepts an arbitrary number of arguments.


[sqlfluff:rules:jinja.padding]
# A single whitespace surrounding Jinja tags,
# alternatively longer gaps containing newlines are acceptable.
[sqlfluff:rules:convention.quoted_literals]
force_enable = True
preferred_quoted_literal_style = single_quotes

[sqlfluff:rules:convention.casting_style]
preferred_type_casting_style = cast

[sqlfluff:rules:ambiguous.column_references]
# GROUP BY/ORDER BY column references
group_by_and_order_by_style = consistent

[sqlfluff:rules:references.special_chars]
# Special characters in identifiers
unquoted_identifiers_policy = all
quoted_identifiers_policy = all
allow_space_in_identifier = False
additional_allowed_characters = ""
ignore_words = None

[sqlfluff:rules:references.quoting]
# Policy on quoted and unquoted identifiers
prefer_quoted_identifiers = False
ignore_words = None

[sqlfluff:rules:convention.blocked_words]
# Comma separated list of blocked words that should not be used
blocked_words = None

[sqlfluff:rules:capitalisation.types]
# Data Types
extended_capitalisation_policy = upper
# Comma separated list of words to ignore for this rule
ignore_words = None

[sqlfluff_layout:type:comma]
line_position = leading